[
  {
    "title": "Upsert your data",
    "code": "const { data, error } = await supabase\n  .from('instruments')\n  .upsert({ id: 1, name: 'piano' })\n  .select()",
    "data": "create table\ninstruments (id int8 primary key, name text);\n\ninsert into\ninstruments (id, name)\nvalues\n  (1, 'harpsichord');",
    "response": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"piano\"\n    }\n  ],\n  \"status\": 200,\n  \"statusText\": \"OK\"\n}",
    "notes": ""
  },
  {
    "title": "Bulk Upsert your data",
    "code": "const { data, error } = await supabase\n  .from('instruments')\n  .upsert([\n    { id: 1, name: 'piano' },\n    { id: 2, name: 'guitar' }\n  ])\n  .select()",
    "data": "create table\ninstruments (id int8 primary key, name text);\n\ninsert into\ninstruments (id, name)\nvalues\n  (1, 'harpsichord'),\n  (2, 'violin');",
    "response": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"piano\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"guitar\"\n    }\n  ],\n  \"status\": 200,\n  \"statusText\": \"OK\"\n}",
    "notes": ""
  },
  {
    "title": "Upserting into tables with constraints",
    "code": "const { data, error } = await supabase\n  .from('users')\n  .upsert(\n    { id: 1, name: 'Jane', email: 'jane@supabase.com' },\n    { onConflict: 'email' }\n  )\n  .select()",
    "data": "create table\nusers (\n  id int8 primary key,\n  name text,\n  email text unique\n);\n\ninsert into\nusers (id, name, email)\nvalues\n  (1, 'John', 'john@supabase.com'),\n  (2, 'Jane', 'jane@gmail.com');",
    "response": "{\n  \"data\": [\n    {\n      \"id\": 2,\n      \"name\": \"Jane\",\n      \"email\": \"jane@supabase.com\"\n    }\n  ],\n  \"status\": 200,\n  \"statusText\": \"OK\"\n}",
    "notes": ""
  }
]